{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Chart/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","setHours","getHours","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","console","log","toString","id","Math","random","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPoints","dataPoinstValue","dataPoinst","totalMaximum","dataPoint","ExpensesChart","charDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.184171d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    expenseData.date.setHours(expenseData.date.getHours() + 3); // att utc 3\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    console.log(enteredExpenseData.date.toString());\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0)\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  console.log(props.dataPoints);\r\n  const dataPoinstValue = props.dataPoints.map(\r\n    (dataPoinst) => dataPoinst.value\r\n  );\r\n  const totalMaximum = Math.max(...dataPoinstValue);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./Chart\";\r\n\r\n\r\nimport \"./ExpensesChart.css\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const charDataPoints = [\r\n        { label: 'Jan', value: 0},\r\n        { label: 'Feb', value: 0},\r\n        { label: 'Mar', value: 0},\r\n        { label: 'Apr', value: 0},\r\n        { label: 'May', value: 0},\r\n        { label: 'Jun', value: 0},\r\n        { label: 'Jul', value: 0},\r\n        { label: 'Aug', value: 0},\r\n        { label: 'Sep', value: 0},\r\n        { label: 'Oct', value: 0},\r\n        { label: 'Nov', value: 0},\r\n        { label: 'Dec', value: 0}\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const espenseMonth = expense.date.getMonth(); //staring 0 => Jan\r\n        charDataPoints[espenseMonth].value += expense.amount;\r\n    }\r\n   return <Chart dataPoints={charDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\nimport ExpensesChart from '../Chart/ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\n\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\nimport Expenses from './components/Expenses/Expenses';\r\n\r\nconst DUMMY_EXPENSES = [\r\n  {\r\n    id: 'e1',\r\n    title: 'Toilet Paper',\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: 'e3',\r\n    title: 'Car Insurance',\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: 'e4',\r\n    title: 'New Desk (Wooden)',\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}